setwd("C:/Users/Usuario/Desktop/1_Raul_Metodologia/5_Bahia")
#------------------------------------------------------------------------------------------------------#
require("raster")
require("sp")
require("stringr")
require("readr")
require("rgdal")
require("dplyr")
options(scipen=999) # função para desabilitar númeração científica
SC.BA <- readOGR("7_Shapefile_Itapicuru/suscetibilidade_geral.shp", encoding = "UTF-8") # chamar os setores do BA
View(SC.BA@data)
B <- SC.BA@data
View(B)
# removendo colunas que não serão utilizadas
B<-B[,-c(3, 4)]
names(B) <- c("Cod_setor",	"tipo",	"municipio", "area.km²","prop_HAND",
"prop_mata","prop_imper", "prop_cultivo","prop_pastagem")
View(B)
#------------------------------------------------------------------------------------------------------#
# Setores com os valores Rurais
rural <- subset(B, tipo == "RURAL")
# Setores com os valores Urbanos
urbano <- subset(B, tipo == "URBANO")
#------------------------------------------------------------------------------------------------------#
# Os municípios que serão utilizados.
q.rural <- rural %>% # data frame utilizado
dplyr::group_by(municipio) %>% # agrupar por munícipio
dplyr::mutate(q_prop_mata = .bincode(as.numeric(prop_mata),
breaks = quantile(as.numeric(prop_mata), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_mata = dplyr::recode(q_prop_mata, "1" = 1, "2" = 2, "3" = 2, "4" = 3),
q_prop_cultivo = .bincode(as.numeric(prop_cultivo),
breaks = quantile(as.numeric(prop_cultivo), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_cultivo = dplyr::recode(q_prop_cultivo, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_pastagem = .bincode(as.numeric(prop_pastagem),
breaks = quantile(as.numeric(prop_pastagem), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_pastagem = dplyr::recode(q_prop_pastagem, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_HAND = .bincode(as.numeric(prop_HAND),
breaks = quantile(as.numeric(prop_HAND), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_HAND = dplyr::recode(q_prop_HAND, "1" = 1, "2" = 2, "3" = 2, "4" = 3))
View(urbano)
q.urbano <- urbano %>% # data frame utilizado
dplyr::group_by(municipio) %>% # agrupar por munícipio
dplyr::mutate(q_prop_mata = .bincode(as.numeric(prop_mata),
breaks = quantile(as.numeric(prop_mata), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_mata = dplyr::recode(q_prop_mata, "1" = 1, "2" = 2, "3" = 2, "4" = 3),
q_prop_imper = .bincode(as.numeric(prop_imper),
breaks = quantile(as.numeric(prop_imper), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_imper = dplyr::recode(q_prop_imper, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_HAND = .bincode(as.numeric(prop_HAND),
breaks = quantile(as.numeric(prop_HAND), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_HAND = dplyr::recode(q_prop_HAND, "1" = 1, "2" = 2, "3" = 2, "4" = 3))
View(q.rural)
# Calcular usos da terra associados
q.rural$Usos.Assoc <- apply(q.rural[, 10:12], 1, sum)
# Calcular Suscetibilidade Rural
q.rural$Susc <- apply(q.rural[, 13:14], 1, sum)
q.rural <- q.rural %>%
dplyr::mutate(Susc.n = case_when(
Susc <= 6 ~1,
Susc > 6 & Susc <= 9 ~2,
Susc >= 10 ~ 3))
View(q.urbano)
# Calcular ussos associados
q.urbano$Usos.Assoc <- apply(q.urbano[, c(10:11)], 1, sum)
# Calcular Sibilidade Urbana
q.urbano$Susc <- apply(q.urbano[, 12:13], 1, sum)
#------------------------------------------------------------------------------------------------------#
# Reclassificar Sibilidade Urbana
q.urbano <- q.urbano %>%
dplyr::mutate(Susc.n = case_when(
Susc <= 5 ~1,
Susc > 5 & Susc <= 6 ~2,
Susc > 6 ~ 3))
#Juntar as tabelas para realizr o marge no shapefile.
Susc <- rbind(q.urbano, q.rural)
# realizar a join da tabela
names(SC.BA@data ) <- c("Cod_setor",	"tipo", "bairro", "distrito",	"municipio",
"area.km²", "prop_HAND", "prop_mata", "prop_imper",
"prop_cultivo", "prop_pastagem")
SC.BA@data <- SC.BA@data[,-c(6:11)]
SC.BA <- merge(x = SC.BA, y = Susc, by = "Cod_setor", by.x = "Cod_setor", by.y = "Cod_setor", all.x = TRUE)
View(SC.BA@data)
SC.BA@data <- SC.BA@data[,-c(6:7)]
rm(B, q.rural, q.urbano, rural, urbano,S, Susc)
#------------------------------------------------------------------------------------------------------#
# chamar a tabela de Vulnerabilidade Social
table.vul <- read.table(file = "4_Table/8_VUL.txt", header = T, dec = ".", sep = ";", fill = T) # chamar a tabela
#------------------------------------------------------------------------------------------------------#
# chamar a tabela de Vulnerabilidade Social
table.vul <- read.table(file = "4_Table/8_VUL.txt", header = T, dec = ".", sep = ";", fill = T, stringsAsFactors=FALSE) # chamar a tabela
#------------------------------------------------------------------------------------------------------#
# chamar a tabela de Vulnerabilidade Social
table.vul <- read.table(file = "4_Table/8_VUL.txt", header = T, dec = ".", sep = ";", fill = T) # chamar a tabela
table.vul <- table.vul[,-c(2:96)]
View(table.vul)
as.numeric(as.character(table.vul[,'CLAS_VUL_S']))
table.vul[,'CLAS_VUL_S'] <- as.numeric(as.character(table.vul[,'CLAS_VUL_S']))
#------------------------------------------------------------------------------------------------------#
# chamar a tabela de Vulnerabilidade Social
table.vul <- read.table(file = "4_Table/8_VUL.txt", header = T, dec = ".", sep = ";", fill = T) # chamar a tabela
table.vul <- table.vul[,-c(2:96)]
View(SC.BA@data)
SC.BA@data <- SC.BA@data[,-c(4:3)]
SC.BA@data[,'CLAS_VUL_S'] <- as.numeric(as.character(SC.BA@data[,'CLAS_VUL_S']))
View(SC.BA@data)
SC.BA <- merge(x = SC.BA, y = table.vul, by = "Cod_setor", by.x = "Cod_setor", by.y = "Cod_setor", all.x = TRUE)
SC.BA@data[,'CLAS_VUL_S'] <- as.numeric(as.character(SC.BA@data[,'CLAS_VUL_S']))
SC.BA@data[is.na(SC.BA@data)] <- 0
is.na(SC.BA@data)
View(SC.BA@data)
# Calcular a Vulnerabilidade Soeambiental
SC.BA@data$VulSoeAm <- apply(SC.BA@data[, c(15,18)], 1, sum)
# Reclassificar Vulnerabilidade Soeambiental
SC.BA@data <- SC.BA@data %>%
dplyr::mutate(VulSoeAm.n = case_when(
VulSoeAm <= 3 ~1,
VulSoeAm > 3 & VulSoeAm <= 4 ~2,
VulSoeAm > 5 ~ 3))
View(SC.BA@data)
# Reclassificar Vulnerabilidade Soeambiental
SC.BA@data <- SC.BA@data %>%
dplyr::mutate(VulSoeAm.n = case_when(
VulSoeAm <= 3 ~1,
VulSoeAm > 3 & VulSoeAm <= 4 ~2,
VulSoeAm > 4 ~ 3))
View(SC.BA@data)
# Salvar os dados processados.
write_delim (SC.BA@data, path = "4_Table/9_VulSoeAm.txt", delim = ";", col_names = T)
writeOGR(SC.BA, "6_Shapefile/9_VulSoeAmItapicuru.shp", "SC.SP", driver="ESRI Shapefile", overwrite_layer=TRUE)
setwd("C:/Users/Usuario/Desktop/1_Raul_Metodologia/2_Rio_de_Janeiro")
options(scipen=999) # função para desabilitar númeração científica
SC.RJ <- readOGR("7_Shapefile_Muriaé/suscetibilidade_geral.shp", encoding = "UTF-8") # chamar os setores do BA
View(SC.RJ@data)
SC.RJ <- readOGR("7_Shapefile_Muriaé/suscetibilidade_geral.shp", encoding = "UTF-8") # chamar os setores do BA
View(SC.RJ@data)
B <- SC.RJ@data
# removendo colunas que não serão utilizadas
B<-B[,-c(3, 4)]
View(B)
names(B) <- c("Cod_setor",	"tipo",	"municipio", "area.km²","prop_mata",
"prop_HAND", "prop_imper", "CLAS_VUL" ,"prop_cultivo","prop_pastagem")
B[is.na(B)]
#------------------------------------------------------------------------------------------------------#
# Setores com os valores Rurais
rural <- subset(B, tipo == "RURAL")
# Setores com os valores Urbanos
urbano <- subset(B, tipo == "URBANO")
#------------------------------------------------------------------------------------------------------#
# Os municípios que serão utilizados.
q.rural <- rural %>% # data frame utilizado
dplyr::group_by(municipio) %>% # agrupar por munícipio
dplyr::mutate(q_prop_mata = .bincode(as.numeric(prop_mata),
breaks = quantile(as.numeric(prop_mata), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_mata = dplyr::recode(q_prop_mata, "1" = 1, "2" = 2, "3" = 2, "4" = 3),
q_prop_cultivo = .bincode(as.numeric(prop_cultivo),
breaks = quantile(as.numeric(prop_cultivo), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_cultivo = dplyr::recode(q_prop_cultivo, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_pastagem = .bincode(as.numeric(prop_pastagem),
breaks = quantile(as.numeric(prop_pastagem), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_pastagem = dplyr::recode(q_prop_pastagem, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_HAND = .bincode(as.numeric(prop_HAND),
breaks = quantile(as.numeric(prop_HAND), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_HAND = dplyr::recode(q_prop_HAND, "1" = 1, "2" = 2, "3" = 2, "4" = 3))
View(q.rural)
q.urbano <- urbano %>% # data frame utilizado
dplyr::group_by(municipio) %>% # agrupar por munícipio
dplyr::mutate(q_prop_mata = .bincode(as.numeric(prop_mata),
breaks = quantile(as.numeric(prop_mata), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_mata = dplyr::recode(q_prop_mata, "1" = 1, "2" = 2, "3" = 2, "4" = 3),
q_prop_imper = .bincode(as.numeric(prop_imper),
breaks = quantile(as.numeric(prop_imper), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_imper = dplyr::recode(q_prop_imper, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_HAND = .bincode(as.numeric(prop_HAND),
breaks = quantile(as.numeric(prop_HAND), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_HAND = dplyr::recode(q_prop_HAND, "1" = 1, "2" = 2, "3" = 2, "4" = 3))
# Calcular usos da terra associados
q.rural$Usos.Assoc <- apply(q.rural[, 11:13], 1, sum)
# Calcular Suscetibilidade Rural
q.rural$Susc <- apply(q.rural[, 14:15], 1, sum)
q.rural <- q.rural %>%
dplyr::mutate(Susc.n = case_when(
Susc <= 6 ~1,
Susc > 6 & Susc <= 9 ~2,
Susc >= 10 ~ 3))
View(q.urbano)
# Calcular ussos associados
q.urbano$Usos.Assoc <- apply(q.urbano[, c(11:12)], 1, sum)
# Calcular Sibilidade Urbana
q.urbano$Susc <- apply(q.urbano[, 13:14], 1, sum)
#------------------------------------------------------------------------------------------------------#
# Reclassificar Sibilidade Urbana
q.urbano <- q.urbano %>%
dplyr::mutate(Susc.n = case_when(
Susc <= 5 ~1,
Susc > 5 & Susc <= 6 ~2,
Susc > 6 ~ 3))
#Juntar as tabelas para realizr o marge no shapefile.
Susc <- rbind(q.urbano, q.rural)
View(Susc)
View(SC.RJ@data)
# realizar a join da tabela
names(SC.RJ@data ) <- c("Cod_setor",	"tipo", "bairro", "distrito",	"municipio",
"area.km²", "prop_HAND", "prop_mata", "prop_imper","CLAS_VUL"
"prop_cultivo", "prop_pastagem")
# realizar a join da tabela
names(SC.RJ@data ) <- c("Cod_setor",	"tipo", "bairro", "distrito",	"municipio",
"area.km²", "prop_HAND", "prop_mata", "prop_imper","CLAS_VUL",
"prop_cultivo", "prop_pastagem")
View(SC.RJ@data)
SC.RJ@data <- SC.RJ@data[,-c(6:9, 11:12)]
View(SC.RJ@data)
SC.RJ <- merge(x = SC.RJ, y = Susc, by = "Cod_setor", by.x = "Cod_setor", by.y = "Cod_setor", all.x = TRUE)
View(SC.RJ@data)
SC.RJ@data <- SC.RJ@data[,-c(6:8)]
View(SC.RJ@data)
rm(B, q.rural, q.urbano, rural, urbano,S, Susc)
# Calcular a Vulnerabilidade Soeambiental
SC.RJ@data$VulSoeAm <- apply(SC.RJ@data[, c(10,18)], 1, sum)
View(SC.RJ@data)
# Reclassificar Vulnerabilidade Soeambiental
SC.RJ@data <- SC.RJ@data %>%
dplyr::mutate(VulSoeAm.n = case_when(
VulSoeAm <= 3 ~1,
VulSoeAm > 3 & VulSoeAm <= 4 ~2,
VulSoeAm > 4 ~ 3))
View(SC.RJ@data)
# Salvar os dados processados.
write_delim (SC.RJ@data, path = "4_Table/9_Muriae.txt", delim = ";", col_names = T)
writeOGR(SC.RJ, "6_Shapefile/9_Muriae.shp", "SC.SP", driver="ESRI Shapefile", overwrite_layer=TRUE)
setwd("C:/Users/Usuario/Desktop/1_Raul_Metodologia/5_Bahia")
options(scipen=999) # função para desabilitar númeração científica
SC.BA <- readOGR("7_Shapefile_Itapicuru/suscetibilidade_geral.shp", encoding = "UTF-8") # chamar os setores do BA
View(SC.BA@data)
B <- SC.BA@data
View(B)
# removendo colunas que não serão utilizadas
B<-B[,-c(3, 4)]
View(B)
names(B) <- c("Cod_setor",	"tipo",	"municipio", "area.km²","prop_HAND",
"prop_mata","prop_imper","CLAS_VUL", "prop_cultivo","prop_pastagem")
View(B)
#------------------------------------------------------------------------------------------------------#
# Setores com os valores Rurais
rural <- subset(B, tipo == "RURAL")
# Setores com os valores Urbanos
urbano <- subset(B, tipo == "URBANO")
View(rural)
#------------------------------------------------------------------------------------------------------#
# Os municípios que serão utilizados.
q.rural <- rural %>% # data frame utilizado
dplyr::group_by(municipio) %>% # agrupar por munícipio
dplyr::mutate(q_prop_mata = .bincode(as.numeric(prop_mata),
breaks = quantile(as.numeric(prop_mata), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_mata = dplyr::recode(q_prop_mata, "1" = 1, "2" = 2, "3" = 2, "4" = 3),
q_prop_cultivo = .bincode(as.numeric(prop_cultivo),
breaks = quantile(as.numeric(prop_cultivo), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_cultivo = dplyr::recode(q_prop_cultivo, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_pastagem = .bincode(as.numeric(prop_pastagem),
breaks = quantile(as.numeric(prop_pastagem), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_pastagem = dplyr::recode(q_prop_pastagem, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_HAND = .bincode(as.numeric(prop_HAND),
breaks = quantile(as.numeric(prop_HAND), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_HAND = dplyr::recode(q_prop_HAND, "1" = 1, "2" = 2, "3" = 2, "4" = 3))
q.urbano <- urbano %>% # data frame utilizado
dplyr::group_by(municipio) %>% # agrupar por munícipio
dplyr::mutate(q_prop_mata = .bincode(as.numeric(prop_mata),
breaks = quantile(as.numeric(prop_mata), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_mata = dplyr::recode(q_prop_mata, "1" = 1, "2" = 2, "3" = 2, "4" = 3),
q_prop_imper = .bincode(as.numeric(prop_imper),
breaks = quantile(as.numeric(prop_imper), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_imper = dplyr::recode(q_prop_imper, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_HAND = .bincode(as.numeric(prop_HAND),
breaks = quantile(as.numeric(prop_HAND), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_HAND = dplyr::recode(q_prop_HAND, "1" = 1, "2" = 2, "3" = 2, "4" = 3))
View(q.rural)
# Calcular usos da terra associados
q.rural$Usos.Assoc <- apply(q.rural[, 11:13], 1, sum)
# Calcular Suscetibilidade Rural
q.rural$Susc <- apply(q.rural[, 14:15], 1, sum)
q.rural <- q.rural %>%
dplyr::mutate(Susc.n = case_when(
Susc <= 6 ~1,
Susc > 6 & Susc <= 9 ~2,
Susc >= 10 ~ 3))
View(q.urbano)
# Calcular ussos associados
q.urbano$Usos.Assoc <- apply(q.urbano[, c(11:12)], 1, sum)
# Calcular Sibilidade Urbana
q.urbano$Susc <- apply(q.urbano[, 13:14], 1, sum)
#------------------------------------------------------------------------------------------------------#
# Reclassificar Sibilidade Urbana
q.urbano <- q.urbano %>%
dplyr::mutate(Susc.n = case_when(
Susc <= 5 ~1,
Susc > 5 & Susc <= 6 ~2,
Susc > 6 ~ 3))
#Juntar as tabelas para realizr o marge no shapefile.
Susc <- rbind(q.urbano, q.rural)
# realizar a join da tabela
names(SC.BA@data ) <- c("Cod_setor",	"tipo", "bairro", "distrito",	"municipio",
"area.km²", "prop_HAND", "prop_mata", "prop_imper","CLAS_VUL",
"prop_cultivo", "prop_pastagem")
View(SC.BA@data)
View(SC.BA@data)
View(SC.BA@data)
SC.BA@data <- SC.BA@data[,-c(6:9, 11:12)]
View(SC.BA@data)
SC.BA <- merge(x = SC.BA, y = Susc, by = "Cod_setor", by.x = "Cod_setor", by.y = "Cod_setor", all.x = TRUE)
View(SC.BA@data)
SC.BA@data <- SC.BA@data[,-c(6:8)]
View(SC.BA@data)
rm(B, q.rural, q.urbano, rural, urbano,S, Susc)
# Calcular a Vulnerabilidade Soeambiental
SC.BA@data$VulSoeAm <- apply(SC.BA@data[, c(10,18)], 1, sum)
View(SC.BA@data)
# Reclassificar Vulnerabilidade Soeambiental
SC.BA@data <- SC.BA@data %>%
dplyr::mutate(VulSoeAm.n = case_when(
VulSoeAm <= 3 ~1,
VulSoeAm > 3 & VulSoeAm <= 4 ~2,
VulSoeAm > 4 ~ 3))
# Salvar os dados processados.
write_delim (SC.BA@data, path = "4_Table/9_Itapicuru.txt", delim = ";", col_names = T)
writeOGR(SC.BA, "6_Shapefile/9_Itapicuru.shp", "SC.SP", driver="ESRI Shapefile", overwrite_layer=TRUE)
View(SC.BA@data)
setwd("C:/Users/Usuario/Desktop/1_Raul_Metodologia/2_Rio_de_Janeiro")
SC.RJ <- readOGR("7_Shapefile_Piabanha/suscetibilidade_geral.shp", encoding = "UTF-8") # chamar os setores do BA
setwd("C:/Users/Usuario/Desktop/1_Raul_Metodologia/2_Rio_de_Janeiro")
SC.RJ <- readOGR("8_Shapefile_Piabanha/suscetibilidade_geral.shp", encoding = "UTF-8") # chamar os setores do BA
View(SC.RJ@data)
B <- SC.RJ@data
# removendo colunas que não serão utilizadas
B<-B[,-c(3, 4)]
View(B)
names(B) <- c("Cod_setor",	"tipo",	"municipio","CLAS_VUL", "area.km²",
"prop_HAND","prop_mata","prop_imper",
"prop_pastagem","prop_cultivo")
#------------------------------------------------------------------------------------------------------#
# Setores com os valores Rurais
rural <- subset(B, tipo == "RURAL")
# Setores com os valores Urbanos
urbano <- subset(B, tipo == "URBANO")
View(rural)
#------------------------------------------------------------------------------------------------------#
# Os municípios que serão utilizados.
q.rural <- rural %>% # data frame utilizado
dplyr::group_by(municipio) %>% # agrupar por munícipio
dplyr::mutate(q_prop_mata = .bincode(as.numeric(prop_mata),
breaks = quantile(as.numeric(prop_mata), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_mata = dplyr::recode(q_prop_mata, "1" = 1, "2" = 2, "3" = 2, "4" = 3),
q_prop_cultivo = .bincode(as.numeric(prop_cultivo),
breaks = quantile(as.numeric(prop_cultivo), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_cultivo = dplyr::recode(q_prop_cultivo, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_pastagem = .bincode(as.numeric(prop_pastagem),
breaks = quantile(as.numeric(prop_pastagem), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_pastagem = dplyr::recode(q_prop_pastagem, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_HAND = .bincode(as.numeric(prop_HAND),
breaks = quantile(as.numeric(prop_HAND), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_HAND = dplyr::recode(q_prop_HAND, "1" = 1, "2" = 2, "3" = 2, "4" = 3))
View(rural)
q.urbano <- urbano %>% # data frame utilizado
dplyr::group_by(municipio) %>% # agrupar por munícipio
dplyr::mutate(q_prop_mata = .bincode(as.numeric(prop_mata),
breaks = quantile(as.numeric(prop_mata), probs =seq(from = 0, to = 1, by = .25)),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_mata = dplyr::recode(q_prop_mata, "1" = 1, "2" = 2, "3" = 2, "4" = 3),
q_prop_imper = .bincode(as.numeric(prop_imper),
breaks = quantile(as.numeric(prop_imper), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_imper = dplyr::recode(q_prop_imper, "1" = 3, "2" = 2, "3" = 2, "4" = 1),
q_prop_HAND = .bincode(as.numeric(prop_HAND),
breaks = quantile(as.numeric(prop_HAND), probs =seq(from = 0, to = 1, by = .25), na.rm = T),
include.lowest = TRUE), #  criar e extrair o valor por quantil
q_prop_HAND = dplyr::recode(q_prop_HAND, "1" = 1, "2" = 2, "3" = 2, "4" = 3))
View(q.rural)
# Calcular usos da terra associados
q.rural$Usos.Assoc <- apply(q.rural[, 11:13], 1, sum)
# Calcular Suscetibilidade Rural
q.rural$Susc <- apply(q.rural[, 14:15], 1, sum)
q.rural <- q.rural %>%
dplyr::mutate(Susc.n = case_when(
Susc <= 6 ~1,
Susc > 6 & Susc <= 9 ~2,
Susc >= 10 ~ 3))
View(q.urbano)
# Calcular ussos associados
q.urbano$Usos.Assoc <- apply(q.urbano[, c(11:12)], 1, sum)
# Calcular Sibilidade Urbana
q.urbano$Susc <- apply(q.urbano[, 13:14], 1, sum)
#------------------------------------------------------------------------------------------------------#
# Reclassificar Sibilidade Urbana
q.urbano <- q.urbano %>%
dplyr::mutate(Susc.n = case_when(
Susc <= 5 ~1,
Susc > 5 & Susc <= 6 ~2,
Susc > 6 ~ 3))
#Juntar as tabelas para realizr o marge no shapefile.
Susc <- rbind(q.urbano, q.rural)
View(SC.RJ@data)
# realizar a join da tabela
names(SC.RJ@data ) <- c("Cod_setor",	"tipo", "bairro", "distrito",	"municipio","CLAS_VUL",
"area.km²", "prop_HAND", "prop_mata", "prop_imper",
"prop_pastagem","prop_cultivo")
View(SC.RJ@data)
SC.RJ@data <- SC.RJ@data[,-c(7:12)]
View(SC.RJ@data)
SC.RJ <- merge(x = SC.RJ, y = Susc, by = "Cod_setor", by.x = "Cod_setor", by.y = "Cod_setor", all.x = TRUE)
View(SC.RJ@data)
SC.RJ@data <- SC.RJ@data[,-c(6:8)]
View(SC.RJ@data)
rm(B, q.rural, q.urbano, rural, urbano,S, Susc)
# Calcular a Vulnerabilidade Soeambiental
SC.RJ@data$VulSoeAm <- apply(SC.RJ@data[, c(6,18)], 1, sum)
View(SC.RJ@data)
# Reclassificar Vulnerabilidade Soeambiental
SC.RJ@data <- SC.RJ@data %>%
dplyr::mutate(VulSoeAm.n = case_when(
VulSoeAm <= 3 ~1,
VulSoeAm > 3 & VulSoeAm <= 4 ~2,
VulSoeAm > 4 ~ 3))
# Salvar os dados processados.
write_delim (SC.RJ@data, path = "4_Table/9_Piabanha.txt", delim = ";", col_names = T)
writeOGR(SC.RJ, "6_Shapefile/9_Piabanha.shp", "SC.SP", driver="ESRI Shapefile", overwrite_layer=TRUE)
